Basic JavaScript
Npm

React = 3
React_hooks -1
------------------------
React-Redux =2
React-JWT(Login Logut)-1
React-Saga -1
React-GarphQL 1

Basic React Native=1
----------------------
Testing

Depolyment
-> MERN
-> Docker
-> Nginx

Mock API
json-server

Github

--------NOT--------------
API
GarphQL
Login/Logout

////////////////////////////////////////////
SPA
Single Page Appliation

React is a JavaScript framwrok that help
to build single page application
using component based strucutre

Open Source

npm> Node Package manager



>>>>>>>>>>>>>>>>>>>>>>>>>NodeJS<<<<<<<<<<<<<<<<<<<<<<
package.json

json> Javascript Object notation
Way to represent the data
[
    {
        name:"john",
        class:"ui"
    },
    {
        name:"Alvin",
        class:"react"
    }
]

package.json
> Starting Point to application
> help to manage package
> META data
> Script


>>>>>>>>>>>>>>>>>>>>>>>>>>
Step to create package.json
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
**NodeJs must be installed in system
> Navgate to the folder using cmd/Terminal
> npm init
> Answer all question
> type "yes"


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Step to install packages
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Depenedency
Node_modules
packages
Node packages

Local > local to each folder
> Navgate to the folder using cmd/Terminal
> npm install package name / npm i package name

Global> insatlled into to the system 
Global Packages are generlly use to generte application
We only install them one time in the system
We need admin access to install global packages
They dont added in package.json
We only use global packages at the time of development

Setup React Appliation
Component

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Step to generate react app/ install global package
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//One time
#window
> run cmd as admin
> npm i -g create-react-app 
----------------------------------------
#mac/linux
> open termnal
> sudo npm i -g create-react-app

>>>>To Generate the app<<<<
> Navigate to the folder where you want to generate app using cmd/terminal
> create-react-app appname

>>>>How to run the Application<<<<
> Using cmd/termianl Navigate into app folder
> npm start 
> http://localhost:3000


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HooksComponent
Component
<<<<<<<<<<<<<<<<<<<<<<<<
Functional                        ClassBase
dumb component                 Logical Component
Light in weight                Heavy as compare to Functional
cannot maintain state          Can Maintain state
Cannot call API                Can call API
Display Component               


>>>>>>>>>>>>>>>>>>>>
State> State Act like a local variable
       Any Data interaction happen through state
Props > help to transfer state/data

class component we call API
        ||
        || Data
Functional Component through prop

componentA       Props           ComponentB
stateA  >>>>>>>>>>>>>>>>>>>>>>>>>StateB

///////////////////////////////////////////////////
render
child => parent
filter


////
Map in JavaScript
filter in Javascript
indexof in javascript


//////////////
var a = [2,4,6,8]
a.map((data) => { return data*2})
(4) [4, 8, 12, 16]

var age = [34,24,56,12,37,29]
undefined
age.filter((data)=> {return data>25})
(4) [34, 56, 37, 29]
age.map((data)=> {return data>25})
(6) [true, false, true, false, true, true]

filter return only those for which condition is true
map always return the same length of array 
filter may or may not return same length of array




var a = [0,1,2,3]
a.map((data) => { return data*2})
(4) [0, 2, 4, 6]
a.filter((data) => { return data*2})
(3) [1, 2, 3]

var city = ["London","Amsterdam","Paris","Helsinki","Delhi"]
undefined
city.indexOf('Delhi')
4
city.indexOf('Paris')
2
city.indexOf('London')
0
city.indexOf('Mumbai')
-1
city.indexOf('Pune')
-1



npm i react-router-dom
browserRouter
router
link

//////////
json-server

npm i -g json-server
json-server --watch db.json --port 8900

////////////
Reduce amount of code in big apps
It make it very much maintaiable
Scalebility become easy
only write code once and resume
Now we can pass data from non-nested component

npm i redux react-redux